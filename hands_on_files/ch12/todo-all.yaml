apiVersion: v1
kind: Secret
metadata:
  name: todo-secret
type: Opaque
data:
  mysql-user: cm9vdA==
  mysql-password: c2VjcmV0
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: todo-config
data:
  mysql-host: "todo-mysql-svc.default.svc.cluster.local"
  mysql-db: "todos"
---
apiVersion: v1
kind: Service
metadata:
  name: todo-app-svc
spec:
  type: NodePort
  selector:
    app: todo-app
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 30007
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app-deployment
  labels:
    app: todo-app
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: todo-app
  template:
    metadata:
      labels:
        app: todo-app
    spec:
      containers:
      - name: todo-app
        image: [USER-NAME]/todo-app:1.0.0
        env:
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: todo-config
              key: mysql-host
        - name: MYSQL_DB
          valueFrom:
            configMapKeyRef:
              name: todo-config
              key: mysql-db
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: todo-secret
              key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: todo-secret
              key: mysql-password
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: regcred
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: todo-app-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: todo-app.info
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: todo-app-svc
                port:
                  number: 3000
